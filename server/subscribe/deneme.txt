generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model inventory {
  inventory_id String       @id @db.VarChar(1000)
  item_id      Int          @default(autoincrement())
  user_id      Int          @default(autoincrement())
  wallet_id    String?      @db.VarChar(50)
  item         item         @relation(fields: [item_id], references: [item_id], onDelete: NoAction, onUpdate: NoAction)
  users        users        @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  user_wallet  user_wallet? @relation(fields: [wallet_id], references: [wallet_id], onDelete: NoAction, onUpdate: NoAction)
}

model item {
  item_id       Int            @id @default(autoincrement())
  item_name     String?        @db.VarChar(20)
  item_category String?        @db.VarChar(30)
  item_design   String?        @db.VarChar(30)
  inventory     inventory[]
  transactions  transactions[]
}

model transactions {
  transaction_id        String       @id(map: "transaction_transaction_id") @db.VarChar(1000)
  transaction_hash      String?      @db.VarChar(70)
  transaction_timestamp DateTime?    @db.Timestamp(6)
  item_id               Int          @default(autoincrement())
  user_id               Int          @default(autoincrement())
  wallet_id             String?      @db.VarChar(50)
  eth_amount            Float?
  transaction_type      String       @db.VarChar(10)
  item                  item         @relation(fields: [item_id], references: [item_id], onDelete: NoAction, onUpdate: NoAction)
  users                 users        @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  user_wallet           user_wallet? @relation(fields: [wallet_id], references: [wallet_id], onDelete: NoAction, onUpdate: NoAction)
}

model user_wallet {
  wallet_id    String         @id @db.VarChar(50)
  eth_amount   Int?
  user_id      Int            @default(autoincrement())
  inventory    inventory[]
  transactions transactions[]
  users        users          @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  user_id         Int            @id @unique @default(autoincrement())
  user_name       String?        @unique @db.VarChar(20)
  user_mail       String?        @unique @db.VarChar(30)
  user_password   String?        @db.VarChar(100)
  user_activation Boolean        @default(false)
  inventory       inventory[]
  transactions    transactions[]
  user_wallet     user_wallet[]
}
